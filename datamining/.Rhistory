shiny::runApp('Rprog/hackathon/superbettertown')
setwd("~/Rprog/hackathon")
dir <- "C:/Users/yann/Documents/Rprog/hackathon/data/"
strip <- function(x){
z <- gsub("[^0-9,.]", "", x)
z <- gsub("\\.", "", z)
gsub(",", ".", z)
}
emploi_histo <- read.csv(paste0(dir,"emploiCommuneRes.csv"), header=TRUE, sep=";",fileEncoding="latin1",quote="\"",allowEscapes=TRUE)
emploi_histo$EMPLOI_2009_03_31 <- as.numeric(strip(emploi_histo$EMPLOI_2009_03_31))
emploi_histo$EMPLOI_2010_03_31 <- as.numeric(strip(emploi_histo$EMPLOI_2010_03_31))
emploi_histo$EMPLOI_2011_03_31 <- as.numeric(strip(emploi_histo$EMPLOI_2011_03_31))
emploi_histo$EMPLOI_2012_03_30 <- as.numeric(strip(emploi_histo$EMPLOI_2012_03_30))
emploi_histo$EMPLOI_2013_03_29 <- as.numeric(strip(emploi_histo$EMPLOI_2013_03_29))
emploi_histo$EMPLOI_2014_03_31 <- as.numeric(strip(emploi_histo$EMPLOI_2014_03_31))
emploi_histo$EMPLOI_2015_03_31 <- as.numeric(strip(emploi_histo$EMPLOI_2015_03_31))
emploi_histo$EMPLOI_2016_03_31 <- as.numeric(strip(emploi_histo$EMPLOI_2016_03_31))
EMPLOI_TREND <- NULL
for (i in (1:nrow(emploi_histo))) {
emplois <- c(emploi_histo[i,]$EMPLOI_2009_03_31,emploi_histo[i,]$EMPLOI_2010_03_31,
emploi_histo[i,]$EMPLOI_2011_03_31,emploi_histo[i,]$EMPLOI_2012_03_30,
emploi_histo[i,]$EMPLOI_2013_03_29,emploi_histo[i,]$EMPLOI_2014_03_31,
emploi_histo[i,]$EMPLOI_2015_03_31,emploi_histo[i,]$EMPLOI_2016_03_31)
years<-c(2009:2016)
fit <- as.numeric(lm(emplois~years)$coefficients[2])
EMPLOI_TREND <-c(EMPLOI_TREND,fit)
}
emploi_histo <- cbind(emploi_histo,EMPLOI_TREND)
population <- read.csv(paste0(dir,"rnpp_population_commune.csv"), header=TRUE, sep=",",fileEncoding="latin1",quote="\"",allowEscapes=TRUE)
population$TOTALE <- population$FEMMES_MINEURES+population$HOMMES_MINEURS+population$FEMMES_MAJEURES+population$HOMMES_MAJEURS
couverture <- read.csv(paste0(dir,"couverture_DEC_2016.csv"), header=TRUE, sep=";",fileEncoding="latin1",quote="\"",allowEscapes=TRUE)
pyramide <- read.csv(paste0(dir,"rnrpp_pyramide_age_commune.csv"), header=TRUE, sep=",",fileEncoding="latin1",quote="\"",allowEscapes=TRUE)
accident <- read.csv(paste0(dir,"Accidents.csv"), header=TRUE, sep=";",fileEncoding="latin1",quote="\"",allowEscapes=TRUE,na.strings = "-")
ACCIDENT_TREND <- NULL
for (i in (1:nrow(accident))) {
accidents <- c(accident[i,]$ACCIDENTS_CORPORELS_2005,accident[i,]$ACCIDENTS_CORPORELS_2006,
accident[i,]$ACCIDENTS_CORPORELS_2007,accident[i,]$ACCIDENTS_CORPORELS_2008,
accident[i,]$ACCIDENTS_CORPORELS_2009,accident[i,]$ACCIDENTS_CORPORELS_2010,
accident[i,]$ACCIDENTS_CORPORELS_2011,accident[i,]$ACCIDENTS_CORPORELS_2012,
accident[i,]$ACCIDENTS_CORPORELS_2013,accident[i,]$ACCIDENTS_CORPORELS_2014,
accident[i,]$ACCIDENTS_CORPORELS_2015)
years<-c(2005:2015)
fit <- as.numeric(lm(accidents~years)$coefficients[2])
ACCIDENT_TREND <-c(ACCIDENT_TREND,fit)
}
accident <- cbind(accident,ACCIDENT_TREND)
VICTIME_TREND <- NULL
for (i in (1:nrow(accident))) {
victimes <- c(accident[i,]$TOTAL_DES_VICTIMES_2005,accident[i,]$TOTAL_DES_VICTIMES_2006,
accident[i,]$TOTAL_DES_VICTIMES_2007,accident[i,]$TOTAL_DES_VICTIMES_2008,
accident[i,]$TOTAL_DES_VICTIMES_2009,accident[i,]$TOTAL_DES_VICTIMES_2010,
accident[i,]$TOTAL_DES_VICTIMES_2011,accident[i,]$TOTAL_DES_VICTIMES_2012,
accident[i,]$TOTAL_DES_VICTIMES_2013,accident[i,]$TOTAL_DES_VICTIMES_2014,
accident[i,]$TOTAL_DES_VICTIMES_2015)
years<-c(2005:2015)
fit <- as.numeric(lm(victimes~years)$coefficients[2])
VICTIME_TREND <-c(VICTIME_TREND,fit)
}
accident <- cbind(accident,VICTIME_TREND)
accident_domestique <- subset(accident, select =c(COMMUNE_CODE,COMMUNE_NOM,ACCIDENTS_CORPORELS_2005,ACCIDENTS_CORPORELS_2006,ACCIDENTS_CORPORELS_2007,ACCIDENTS_CORPORELS_2008,
ACCIDENTS_CORPORELS_2009,ACCIDENTS_CORPORELS_2010,ACCIDENTS_CORPORELS_2011,ACCIDENTS_CORPORELS_2012,
ACCIDENTS_CORPORELS_2013,ACCIDENTS_CORPORELS_2014,ACCIDENTS_CORPORELS_2015,ACCIDENT_TREND))
victime_route <- subset(accident, select =c(COMMUNE_CODE,COMMUNE_NOM,TOTAL_DES_VICTIMES_2005,TOTAL_DES_VICTIMES_2006,TOTAL_DES_VICTIMES_2007,TOTAL_DES_VICTIMES_2008,
TOTAL_DES_VICTIMES_2009,TOTAL_DES_VICTIMES_2010,TOTAL_DES_VICTIMES_2011,TOTAL_DES_VICTIMES_2012,
TOTAL_DES_VICTIMES_2013,TOTAL_DES_VICTIMES_2014,TOTAL_DES_VICTIMES_2015,VICTIME_TREND))
emploi <- merge(x=emploi_histo,y=population,by="COMMUNE_CODE",all.x = TRUE)
emploi$PERCENT_EMPLOI_2016 = round(emploi$EMPLOI_2016_03_31/emploi$TOTALE,2)
emploi <- subset(emploi,select = c(COMMUNE_CODE, COMMUNE_NOM.x,PERCENT_EMPLOI_2016,EMPLOI_2016_03_31,TOTALE,EMPLOI_TREND))
colnames(emploi)[colnames(emploi)=="COMMUNE_NOM.x"] <- "COMMUNE_NOM"
commune <- subset(emploi,select = c(COMMUNE_CODE, COMMUNE_NOM))
all <- merge(x=emploi,y=couverture,by="COMMUNE_CODE",all.x = TRUE)
all <- subset(all,select = -c(COMMUNE_NOM.y,X))
colnames(all)[colnames(all)=="COMMUNE_NOM.x"] <- "COMMUNE_NOM"
all <- merge(x=all,y=accident_domestique,by="COMMUNE_CODE",all.x = TRUE)
all <- subset(all,select = -c(COMMUNE_NOM.y,ACCIDENTS_CORPORELS_2005,ACCIDENTS_CORPORELS_2006,ACCIDENTS_CORPORELS_2007,ACCIDENTS_CORPORELS_2008,
ACCIDENTS_CORPORELS_2009,ACCIDENTS_CORPORELS_2010,ACCIDENTS_CORPORELS_2011,ACCIDENTS_CORPORELS_2012,
ACCIDENTS_CORPORELS_2013,ACCIDENTS_CORPORELS_2014,ACCIDENTS_CORPORELS_2015))
colnames(all)[colnames(all)=="COMMUNE_NOM.x"] <- "COMMUNE_NOM"
all <- merge(x=all,y=victime_route,by="COMMUNE_CODE",all.x = TRUE)
all <- subset(all,select = -c(COMMUNE_NOM.y,TOTAL_DES_VICTIMES_2005,TOTAL_DES_VICTIMES_2006,TOTAL_DES_VICTIMES_2007,TOTAL_DES_VICTIMES_2008,
TOTAL_DES_VICTIMES_2009,TOTAL_DES_VICTIMES_2010,TOTAL_DES_VICTIMES_2011,TOTAL_DES_VICTIMES_2012,
TOTAL_DES_VICTIMES_2013,TOTAL_DES_VICTIMES_2014,TOTAL_DES_VICTIMES_2015))
colnames(all)[colnames(all)=="COMMUNE_NOM.x"] <- "COMMUNE_NOM"
library(mongolite)
save(all,file="all.rda")
runApp('superbettertown')
runApp('superbettertown')
commune[,commune$COMMUNE_NOM==input$commune]
commune[,commune$COMMUNE_NOM=='Viaden']
commune[,commune$COMMUNE_NOM=='Bech']
commune[commune$COMMUNE_NOM=='Bech',]
commune[commune$COMMUNE_NOM=='Bech',]$COMMUNE_CODE
runApp('superbettertown')
runApp('superbettertown')
runApp('superbettertown')
all[,all$COMMUNE_CODE==1]$TOTALE
all[all$COMMUNE_CODE==1,]$TOTALE
runApp('superbettertown')
runApp('superbettertown')
c = mongo(collection = "all", db = "superdb")
if (c$count()>0) c$drop()
c$insert(all)
c = mongo(collection = "all", db = "superdb")
all2 <- c$find()
all <- c$find()
rm(all2)
test <- merge(x=all,y=avis,by="COMMUNE_CODE",all.x = FALSE)
test$UHD1<-as.numeric(test$UHD1)
test$UHD2<-as.numeric(test$UHD2)
test$UHD3<-as.numeric(test$UHD3)
rf <- randomForest(subset(test,select = -c(COMMUNE_CODE,COMMUNE_NOM,avis)), as.factor(test$avis), ntree=100, importance=TRUE)
imp <- importance(rf, type=1)
featureImportance <- data.frame(Feature=row.names(imp), Importance=imp[,1])
rf <- randomForest(subset(test,select = -c(COMMUNE_CODE,COMMUNE_NOM,avis)), as.factor(test$avis), ntree=100, importance=TRUE)
library(randomForest)
rf <- randomForest(subset(test,select = -c(COMMUNE_CODE,COMMUNE_NOM,avis)), as.factor(test$avis), ntree=100, importance=TRUE)
rf <- randomForest(subset(test,select = -c(COMMUNE_CODE,COMMUNE_NOM,avis)), as.factor(test$avis), ntree=100, importance=TRUE)
imp <- importance(rf, type=1)
test <- merge(x=all,y=avis,by="COMMUNE_CODE",all.x = FALSE)
test$UHD1<-as.numeric(test$UHD1)
avis <- data.frame(COMMUNE_CODE=rep(commune$COMMUNE_CODE,times=nbr),
mail=rep(c("user@gmail.com"),times=105*nbr),
avis=sample(1:5, 105*nbr, replace=T))
nbr <- 10
avis <- data.frame(COMMUNE_CODE=rep(commune$COMMUNE_CODE,times=nbr),
mail=rep(c("user@gmail.com"),times=105*nbr),
avis=sample(1:5, 105*nbr, replace=T))
c = mongo(collection = "all", db = "superdb")
all <- c$find()
test <- merge(x=all,y=avis,by="COMMUNE_CODE",all.x = FALSE)
test$UHD1<-as.numeric(test$UHD1)
test$UHD2<-as.numeric(test$UHD2)
test$UHD3<-as.numeric(test$UHD3)
rf <- randomForest(subset(test,select = -c(COMMUNE_CODE,COMMUNE_NOM,avis)), as.factor(test$avis), ntree=100, importance=TRUE)
View(all)
View(all)
View(test)
View(test)
View(all)
View(all)
test <- merge(x=all,y=avis,by="COMMUNE_CODE",all.x = FALSE)
View(test)
View(test)
test$UHD1<-as.numeric(test$UHD1)
all <- merge(x=emploi,y=couverture,by="COMMUNE_CODE",all.x = TRUE)
all <- subset(all,select = -c(COMMUNE_NOM.y,X))
colnames(all)[colnames(all)=="COMMUNE_NOM.x"] <- "COMMUNE_NOM"
couverture$UHD1<-as.numeric(couverture$UHD1)
couverture$UHD2<-as.numeric(couverture$UHD2)
couverture$UHD3<-as.numeric(couverture$UHD3)
pyramide <- read.csv(paste0(dir,"rnrpp_pyramide_age_commune.csv"), header=TRUE, sep=",",fileEncoding="latin1",quote="\"",allowEscapes=TRUE)
accident <- read.csv(paste0(dir,"Accidents.csv"), header=TRUE, sep=";",fileEncoding="latin1",quote="\"",allowEscapes=TRUE,na.strings = "-")
ACCIDENT_TREND <- NULL
for (i in (1:nrow(accident))) {
accidents <- c(accident[i,]$ACCIDENTS_CORPORELS_2005,accident[i,]$ACCIDENTS_CORPORELS_2006,
accident[i,]$ACCIDENTS_CORPORELS_2007,accident[i,]$ACCIDENTS_CORPORELS_2008,
accident[i,]$ACCIDENTS_CORPORELS_2009,accident[i,]$ACCIDENTS_CORPORELS_2010,
accident[i,]$ACCIDENTS_CORPORELS_2011,accident[i,]$ACCIDENTS_CORPORELS_2012,
accident[i,]$ACCIDENTS_CORPORELS_2013,accident[i,]$ACCIDENTS_CORPORELS_2014,
accident[i,]$ACCIDENTS_CORPORELS_2015)
years<-c(2005:2015)
fit <- as.numeric(lm(accidents~years)$coefficients[2])
ACCIDENT_TREND <-c(ACCIDENT_TREND,fit)
}
accident <- cbind(accident,ACCIDENT_TREND)
VICTIME_TREND <- NULL
for (i in (1:nrow(accident))) {
victimes <- c(accident[i,]$TOTAL_DES_VICTIMES_2005,accident[i,]$TOTAL_DES_VICTIMES_2006,
accident[i,]$TOTAL_DES_VICTIMES_2007,accident[i,]$TOTAL_DES_VICTIMES_2008,
accident[i,]$TOTAL_DES_VICTIMES_2009,accident[i,]$TOTAL_DES_VICTIMES_2010,
accident[i,]$TOTAL_DES_VICTIMES_2011,accident[i,]$TOTAL_DES_VICTIMES_2012,
accident[i,]$TOTAL_DES_VICTIMES_2013,accident[i,]$TOTAL_DES_VICTIMES_2014,
accident[i,]$TOTAL_DES_VICTIMES_2015)
years<-c(2005:2015)
fit <- as.numeric(lm(victimes~years)$coefficients[2])
VICTIME_TREND <-c(VICTIME_TREND,fit)
}
accident <- cbind(accident,VICTIME_TREND)
accident_domestique <- subset(accident, select =c(COMMUNE_CODE,COMMUNE_NOM,ACCIDENTS_CORPORELS_2005,ACCIDENTS_CORPORELS_2006,ACCIDENTS_CORPORELS_2007,ACCIDENTS_CORPORELS_2008,
ACCIDENTS_CORPORELS_2009,ACCIDENTS_CORPORELS_2010,ACCIDENTS_CORPORELS_2011,ACCIDENTS_CORPORELS_2012,
ACCIDENTS_CORPORELS_2013,ACCIDENTS_CORPORELS_2014,ACCIDENTS_CORPORELS_2015,ACCIDENT_TREND))
victime_route <- subset(accident, select =c(COMMUNE_CODE,COMMUNE_NOM,TOTAL_DES_VICTIMES_2005,TOTAL_DES_VICTIMES_2006,TOTAL_DES_VICTIMES_2007,TOTAL_DES_VICTIMES_2008,
TOTAL_DES_VICTIMES_2009,TOTAL_DES_VICTIMES_2010,TOTAL_DES_VICTIMES_2011,TOTAL_DES_VICTIMES_2012,
TOTAL_DES_VICTIMES_2013,TOTAL_DES_VICTIMES_2014,TOTAL_DES_VICTIMES_2015,VICTIME_TREND))
emploi <- merge(x=emploi_histo,y=population,by="COMMUNE_CODE",all.x = TRUE)
emploi$PERCENT_EMPLOI_2016 = round(emploi$EMPLOI_2016_03_31/emploi$TOTALE,2)
emploi <- subset(emploi,select = c(COMMUNE_CODE, COMMUNE_NOM.x,PERCENT_EMPLOI_2016,EMPLOI_2016_03_31,TOTALE,EMPLOI_TREND))
colnames(emploi)[colnames(emploi)=="COMMUNE_NOM.x"] <- "COMMUNE_NOM"
commune <- subset(emploi,select = c(COMMUNE_CODE, COMMUNE_NOM))
all <- merge(x=emploi,y=couverture,by="COMMUNE_CODE",all.x = TRUE)
all <- subset(all,select = -c(COMMUNE_NOM.y,X))
colnames(all)[colnames(all)=="COMMUNE_NOM.x"] <- "COMMUNE_NOM"
all <- merge(x=all,y=accident_domestique,by="COMMUNE_CODE",all.x = TRUE)
all <- subset(all,select = -c(COMMUNE_NOM.y,ACCIDENTS_CORPORELS_2005,ACCIDENTS_CORPORELS_2006,ACCIDENTS_CORPORELS_2007,ACCIDENTS_CORPORELS_2008,
ACCIDENTS_CORPORELS_2009,ACCIDENTS_CORPORELS_2010,ACCIDENTS_CORPORELS_2011,ACCIDENTS_CORPORELS_2012,
ACCIDENTS_CORPORELS_2013,ACCIDENTS_CORPORELS_2014,ACCIDENTS_CORPORELS_2015))
colnames(all)[colnames(all)=="COMMUNE_NOM.x"] <- "COMMUNE_NOM"
all <- merge(x=all,y=victime_route,by="COMMUNE_CODE",all.x = TRUE)
all <- subset(all,select = -c(COMMUNE_NOM.y,TOTAL_DES_VICTIMES_2005,TOTAL_DES_VICTIMES_2006,TOTAL_DES_VICTIMES_2007,TOTAL_DES_VICTIMES_2008,
TOTAL_DES_VICTIMES_2009,TOTAL_DES_VICTIMES_2010,TOTAL_DES_VICTIMES_2011,TOTAL_DES_VICTIMES_2012,
TOTAL_DES_VICTIMES_2013,TOTAL_DES_VICTIMES_2014,TOTAL_DES_VICTIMES_2015))
colnames(all)[colnames(all)=="COMMUNE_NOM.x"] <- "COMMUNE_NOM"
library(mongolite)
library(jsonlite)
c = mongo(collection = "population", db = "superdb")
if (c$count()>0) c$drop()
c$insert(population)
c = mongo(collection = "couverture", db = "superdb")
if (c$count()>0) c$drop()
c$insert(couverture)
c = mongo(collection = "pyramide", db = "superdb")
if (c$count()>0) c$drop()
c$insert(pyramide)
c = mongo(collection = "emploi", db = "superdb")
if (c$count()>0) c$drop()
c$insert(emploi)
c = mongo(collection = "emploi_histo", db = "superdb")
if (c$count()>0) c$drop()
c$insert(emploi_histo)
c = mongo(collection = "victime_route", db = "superdb")
if (c$count()>0) c$drop()
c$insert(victime_route)
c = mongo(collection = "accident_domestique", db = "superdb")
if (c$count()>0) c$drop()
c$insert(accident_domestique)
c = mongo(collection = "commune", db = "superdb")
if (c$count()>0) c$drop()
c$insert(commune)
c = mongo(collection = "all", db = "superdb")
if (c$count()>0) c$drop()
c$insert(all)
nbr <- 10
avis <- data.frame(COMMUNE_CODE=rep(commune$COMMUNE_CODE,times=nbr),
mail=rep(c("user@gmail.com"),times=105*nbr),
avis=sample(1:5, 105*nbr, replace=T))
c = mongo(collection = "all", db = "superdb")
all <- c$find()
test <- merge(x=all,y=avis,by="COMMUNE_CODE",all.x = FALSE)
test$UHD1<-as.numeric(test$UHD1)
test$UHD1<-as.numeric(test$UHD1)
test$UHD2<-as.numeric(test$UHD2)
rf <- randomForest(subset(test,select = -c(COMMUNE_CODE,COMMUNE_NOM,avis)), as.factor(test$avis), ntree=100, importance=TRUE)
imp <- importance(rf, type=1)
featureImportance <- data.frame(Feature=row.names(imp), Importance=imp[,1])
featureImportance[order(featureImportance$Importance),]
featureImportance[order(-featureImportance$Importance),]
featureImportance <- featureImportance[order(-featureImportance$Importance),]
c = mongo(collection = "featureImportance", db = "superdb")
if (c$count()>0) c$drop()
c$insert(featureImportance)
runApp('superbettertown')
